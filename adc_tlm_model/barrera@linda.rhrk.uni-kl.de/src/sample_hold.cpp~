//////////////////////////////////////////////////////////////////////////////////
//
// Created by Sebastian Lee on 12.09.17
// Description:
// This file simulates the sample/hold stage on the ADC cell.
// Input: Coming from input mux that takes settling time into account.
// Two parameters are set:
// Tracking time: Input coming from the user interface, time ADC must see the
// input voltage to provide specified accuracy. Here is modelled as a time the  sample
// is held before writing to the next stage.
// Transfer time: Time that it takes to transfer to input of cyclic pipeline. 
// Output : Analog sample passed to cycle pipe ADC model at the sample time.
//
//////////////////////////////////////////////////////////////////////////////////


#include "../include/sample_hold.h"

void sample_hold::processing(){
  //If sample_hold_time == 0 we sample mux input , then we must hold that input for tracking + transfer time and then write it to the cyclic pipeline input and reset counter, read next sample and so on. 
  double s_h_value;
  if (start.read() && valid_mux.read() ){
    if(wait_sample_hold_time == 0) //new sample
    s_h_value=mux_in.read();
    else
      if(wait_sample_hold_time < tracking_time.read() + transfer_time.read()) //Hold sample
	wait_sample_hold_time++;
      else{  //Write sample
	cyclic_pipe_out.write(s_h_value);
	sample_valud.write(true);
	wait_sample_hold_time = 0;
      }
  }
}
